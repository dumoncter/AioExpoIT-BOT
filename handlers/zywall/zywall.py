from aiogram import types, Dispatcher, filters
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from keyboards import zywall_main, mac_web

# FSM States
class ClientState(StatesGroup):
    IP = State()


async def zywall_ip(message: types.Message, state: FSMContext):
    await message.reply(f"‚òëÔ∏è –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ç–µ–≤—ã–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏.\n"
                        f"<b>–ß—Ç–æ —É–º–µ–µ—Ç?</b>\n"
                        f"üîπ –ò—Å–∫–∞—Ç—å –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞—Ç—å <b>MAC –∞–¥—Ä–µ—Å–∞</b>\n"
                        f"üîπ –î–æ–±–∞–≤–ª—è—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ <b>Zabbix</b>",
                        reply_markup=mac_web)
    # await state.set_state(ClientState.IP)
    # await message.reply("–£–∫–∞–∂–∏—Ç–µ IP:", reply_markup=zywall_main)


# async def zywall_mac(message: types.Message):
#     await message.reply("", reply_markup=zywall_main)
#     await message.reply("""
#             <b> –í–∞—à IP Zywall </b>
#             """)
#     await message.reply(
#         f'–í–≤–µ–¥–∏—Ç–µ <b>4</> –ø–æ—Å–ª–µ–¥–Ω–∏–µ –±—É–∫–≤—ã –∏–ª–∏ <b>–ø–æ–ª–Ω—ã–π</b>'
#         f'MAC –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <b>1–•:–ï–†</b>', )


# # @dp.message_handler(commands=['start', 'help'])
# async def zywall_ip(message: types.Message, state=ZywallInfo.zywal):
#     try:
#
#         if not ip.isdigit():
#             msg = bot.reply_to(message, '–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –£–∫–∞–∂–∏—Ç–µ IP –±–µ–∑ —Ç–æ—á–∫–∏.')
#             bot.register_next_step_handler(msg, zyxel_step1_add_ip)
#             return
#         elif not ip.isdigit() and not len(ip) <= 6:
#             msg = bot.reply_to(message, '–ù–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. IP —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –Ω–µ –±–æ–ª–µ–µ 4 —á–∏—Å–µ–ª.\n–ü—Ä–∏–º–µ—Ä: 120.1')
#             bot.register_next_step_handler(msg, zyxel_step1_add_ip)
#             return
#         format_ip = message.text
#         bot.reply_to(message, """\
#                     <b> –í–∞—à IP Zywall </b>
#                     """, parse_mode='html')
#         bot.send_message(message.chat.id,
#                          f'–í–≤–µ–¥–∏—Ç–µ <b>4</> –ø–æ—Å–ª–µ–¥–Ω–∏–µ –±—É–∫–≤—ã –∏–ª–∏ <b>–ø–æ–ª–Ω—ã–π</b> MAC –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <b>1–•:–ï–†</b>',
#                          parse_mode='html')
#         bot.register_next_step_handler(message, zyxel_step2_input_mac)
#     except Exception as e:
#         print(e)
#         bot.reply_to(message, '–£–ø—Å! –ë–æ—Ç —Å–ª–æ–º–∞–ª—Å—è –Ω–∞—á–Ω–∏—Ç–µ —Å –Ω–∞—á–∞–ª–∞. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')


def register_handler_zywall(dp: Dispatcher):
    dp.register_message_handler(zywall_ip, filters.Text(equals='üìü –ü–æ–∏—Å–∫ –ø–æ MAC'))